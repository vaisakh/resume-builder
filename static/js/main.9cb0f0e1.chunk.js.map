{"version":3,"sources":["hoc/Aux.js","components/UserControls/Input/Input.js","components/BuildControls/PersonalDetails/PersonalDetails.js","components/BuildControls/Experience/Experience.js","components/BuildControls/Projects/Projects.js","components/BuildControls/Misc/Misc.js","components/BuildControls/Success/Success.js","components/BuildControls/BuildControls.js","containers/ResumeBuilder/ResumeBuilder.js","App.js","serviceWorker.js","index.js"],"names":["aux","props","children","input","inputElement","elementType","react_default","a","createElement","Object","assign","className","elementConfig","value","onChange","changed","personalDetails","formElementsArray","formElements","key","push","id","config","Aux","onSubmit","formSubmit","map","formElement","Input","name","inputChanged","type","onClick","prevPage","nextPage","experience","index","projects","misc","success","BuildControls","state","page","personal","placeholder","required","email","phone","address","linkedin","github","skills","organization","position","duration","description","title","link","education","college","year","qualification","hobbies","achievements","formSubmitHandler","event","preventDefault","_this","setState","inputChangedHandler","inputIdentifier","updatedForm","objectSpread","identifierElement","updatedFormElement","target","nextPageHandler","previousPageHandler","addInputElement","alert","_this2","this","wizardForm","PersonalDetails","Experience","addEl","Projects","Misc","Success","Component","ResumeBuilder","components_BuildControls_BuildControls","App","containers_ResumeBuilder_ResumeBuilder","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9cb0f0e1.chunk.js","sourcesContent":["const aux = (props) => props.children;\n\nexport default aux;\n","import React from 'react';\n\nconst input = ( props ) => {\n  let inputElement = null;\n\n  switch( props.elementType ) {\n    case ( 'input'):\n      inputElement = <input\n        className=\"form-control\"\n        {...props.elementConfig}\n        value={props.value}\n        onChange={props.changed} />;\n      break;\n      case( 'textarea' ):\n      inputElement = <textarea\n        className=\"form-control\"\n       {...props.elementConfig}\n        value={props.value}\n        onChange={props.changed}/>\n        break;\n    default:\n      inputElement = <input {...props} />;\n    }\n\n  return (\n    <div>\n        <label></label>\n        {inputElement}\n    </div>\n  );\n}\n\nexport default input;\n","import React from 'react';\nimport Aux from '../../../hoc/Aux';\nimport Input from '../../UserControls/Input/Input';\n\nconst personalDetails = (props) => {\n  const formElementsArray = [];\n  const formElements = props.formElements;\n\n  for(let key in formElements) {\n    formElementsArray.push({\n      id: key,\n      config: formElements[key]\n    })\n  }\n\n  return (\n    <Aux>\n      <div className=\"container col-lg-8 mx-auto text-center\">\n        <div className=\"shadow border-0 card animated fadeInLeft\">\n          <div className=\"card-body\">\n            <h3 className=\"card-title\">Personal Info</h3>\n            <hr/>\n          </div>\n\n          <form onSubmit={props.formSubmit}>\n              {\n                formElementsArray.map(formElement => (\n                  <Aux key={formElement.id}>\n\n                    <div className=\"row col-lg-10 mx-auto\">\n                      <div className=\"col-lg-12 text-left\">\n                        <Input\n                          key={formElement.id}\n                          name={formElement.id}\n                          elementType={formElement.config.elementType}\n                          elementConfig={formElement.config.elementConfig}\n                          value={formElement.config.value}\n                          changed={props.inputChanged}\n                          />\n                      </div>\n                    </div>\n                  </Aux>\n                ))\n              }\n                  <br />\n                  <div className=\"container text-center\">\n                    <button type=\"button\" className=\"btn btn-info\" onClick={props.prevPage}><i className=\"fas fa-angle-left mr-1\"></i>Back</button>\n                    <button type=\"submit\" className=\"btn btn-info\" onClick={props.nextPage}>Next<i className=\"fas fa-angle-right ml-1\"></i></button>\n                  </div>\n                  <br/>\n                </form>\n              </div>\n            </div>\n            <br/>\n          </Aux>\n\n  );\n}\n\nexport default personalDetails;\n","import React from 'react';\nimport Aux from '../../../hoc/Aux';\nimport Input from '../../UserControls/Input/Input';\n\nconst experience = (props) => {\n  const formElementsArray = [];\n  const formElements = props.formElements;\n\n  for(let key in formElements) {\n    formElementsArray.push({\n      id: key,\n      config: formElements[key]\n    })\n  }\n\n\n  return(\n\n    <Aux>\n      <div className=\"container col-lg-8 mx-auto text-center\">\n        <div className=\"shadow border-0 card animated fadeInLeft\">\n          <div className=\"card-body\">\n            <h3 className=\"card-title\">Experience</h3>\n            <hr/>\n          </div>\n\n          <form onSubmit={props.formSubmit}>\n              {\n                formElementsArray.map((formElement, index) => (\n                  <Aux key={formElement.id}>\n\n                    <div className=\"row col-lg-10 mx-auto\">\n                        <div className=\"col-lg-12 text-left\">\n                        <Input\n                          key={formElement.id}\n                          name={formElement.id}\n                          elementType={formElement.config.elementType}\n                          elementConfig={formElement.config.elementConfig}\n                          value={formElement.config.value}\n                          changed={props.inputChanged}\n                          />\n                      </div>\n                    </div>\n                  </Aux>\n                ))\n              }\n                  <br />\n                  <div className=\"container text-center\">\n                    <button type=\"button\" className=\"btn btn-info\" onClick={props.prevPage}><i className=\"fas fa-angle-left mr-1\"></i>Back</button>\n                    <button type=\"submit\" className=\"btn btn-info\" onClick={props.nextPage}>Next<i className=\"fas fa-angle-right ml-1\"></i></button>\n                  </div>\n                  <br/>\n                </form>\n              </div>\n            </div>\n            <br/>\n          </Aux>\n\n  );\n}\n\nexport default experience;\n","import React from 'react';\nimport Aux from '../../../hoc/Aux';\nimport Input from '../../UserControls/Input/Input';\n\nconst projects = (props) => {\n  const formElementsArray = [];\n  const formElements = props.formElements;\n\n  for(let key in formElements) {\n    formElementsArray.push({\n      id: key,\n      config: formElements[key]\n    })\n  }\n\n\n  return(\n\n    <Aux>\n      <div className=\"container col-lg-8 mx-auto text-center\">\n        <div className=\"shadow border-0 card animated fadeInLeft\">\n          <div className=\"card-body\">\n            <h3 className=\"card-title\">Projects</h3>\n            <hr/>\n          </div>\n\n          <form onSubmit={props.formSubmit}>\n              {\n                formElementsArray.map(formElement => (\n                  <Aux key={formElement.id}>\n\n                    <div className=\"row col-lg-10 mx-auto\">\n                      <div className=\"col-lg-12 text-left\">\n                        <Input\n                          key={formElement.id}\n                          name={formElement.id}\n                          elementType={formElement.config.elementType}\n                          elementConfig={formElement.config.elementConfig}\n                          value={formElement.config.value}\n                          changed={props.inputChanged}\n                          />\n                      </div>\n                    </div>\n                  </Aux>\n                ))\n              }\n                  <br />\n                  <div className=\"container text-center\">\n                    <button type=\"button\" className=\"btn btn-info\" onClick={props.prevPage}><i className=\"fas fa-angle-left mr-1\"></i>Back</button>\n                    <button type=\"submit\" className=\"btn btn-info\" onClick={props.nextPage}>Next<i className=\"fas fa-angle-right ml-1\"></i></button>\n                  </div>\n                  <br/>\n                </form>\n              </div>\n            </div>\n            <br/>\n          </Aux>\n\n  );\n}\n\nexport default projects;\n","import React from 'react';\nimport Aux from '../../../hoc/Aux';\nimport Input from '../../UserControls/Input/Input';\n\nconst misc = (props) => {\n  const formElementsArray = [];\n  const formElements = props.formElements;\n\n  for(let key in formElements) {\n    formElementsArray.push({\n      id: key,\n      config: formElements[key]\n    })\n  }\n\n\n  return(\n\n    <Aux>\n      <div className=\"container col-lg-8 mx-auto text-center\">\n        <div className=\"shadow border-0 card animated fadeInLeft\">\n          <div className=\"card-body\">\n            <h3 className=\"card-title\">Misc</h3>\n            <hr/>\n          </div>\n\n          <form onSubmit={props.formSubmit}>\n              {\n                formElementsArray.map(formElement => (\n                  <Aux key={formElement.id}>\n\n                    <div className=\"row col-lg-10 mx-auto\">\n                      <div className=\"col-lg-12 text-left\">\n                        <Input\n                          key={formElement.id}\n                          name={formElement.id}\n                          elementType={formElement.config.elementType}\n                          elementConfig={formElement.config.elementConfig}\n                          value={formElement.config.value}\n                          changed={props.inputChanged}\n                          />\n                      </div>\n                    </div>\n                  </Aux>\n                ))\n              }\n                  <br />\n                  <div className=\"container text-center\">\n                    <button type=\"button\" className=\"btn btn-info\" onClick={props.prevPage}><i className=\"fas fa-angle-left mr-1\"></i>Back</button>\n                    <button type=\"submit\" className=\"btn btn-info\" onClick={props.nextPage}>Next<i className=\"fas fa-angle-right ml-1\"></i></button>\n                  </div>\n\n                  <br/>\n                </form>\n              </div>\n            </div>\n            <br/>\n          </Aux>\n\n  );\n}\n\nexport default misc;\n","import React from 'react';\nimport Aux from '../../../hoc/Aux';\nimport Input from '../../UserControls/Input/Input';\n\nconst success = (props) => {\n  return(\n\n\n    <Aux>\n      <div className=\"container col-lg-8 mx-auto text-center\">\n        <div className=\"shadow border-0 card animated fadeInLeftn bounceIn\">\n          <div className=\"card-body text-center pt-5 pb-5\">\n            <i className=\"fas fa-check-circle fa-7x text-success\"></i>\n            <h2>We are building your Resume!</h2>\n            <br/>\n          </div>\n\n        </div>\n      </div>\n      <br/>\n    </Aux>\n\n  );\n}\n\nexport default success;\n","import React, { Component } from 'react';\nimport Aux from '../../hoc/Aux';\n\nimport PersonalDetails from './PersonalDetails/PersonalDetails';\nimport Experience from './Experience/Experience';\nimport Projects from './Projects/Projects';\nimport Misc from './Misc/Misc';\nimport Success from './Success/Success';\n\n\nclass BuildControls extends Component {\n  state = {\n    page: 1,\n    formElements: {\n      personal: {\n        name: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            name: 'name',\n            placeholder: 'Your Name',\n            required: 'required'\n          },\n          value: ''\n        },\n        email: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'email',\n            name: 'email',\n            placeholder: 'name@example.com',\n            required: 'required'\n          },\n          value: ''\n        },\n        phone: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            name: 'phone',\n            placeholder: 'Your Phone',\n            required: 'required'\n          },\n          value: ''\n        },\n        address: {\n          elementType: 'textarea',\n          elementConfig: {\n            type: 'text',\n            name: 'address',\n            placeholder: 'Your Address',\n            required: 'required'\n          },\n          value: ''\n        },\n        linkedin: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            name: 'linkedin',\n            placeholder: 'Your Linkedin'\n          },\n          value: ''\n        },\n        github: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            name: 'github',\n            placeholder: 'Your Github'\n          },\n          value: ''\n        },\n        skills: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            name: 'skills',\n            placeholder: 'Your Skills'\n          },\n          value: ''\n        }\n      },\n      experience: {\n        organization: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            name: 'organization',\n            placeholder: 'Organization'\n          },\n          value: ''\n        },\n        position: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            name: 'position',\n            placeholder: 'Position'\n          },\n          value: ''\n        },\n        duration: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            name: 'duration',\n            placeholder: 'Duration'\n          },\n          value: ''\n        },\n        description: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            name: 'description',\n            placeholder: 'Description'\n          },\n          value: ''\n        },\n      },\n      projects: {\n        title: {\n          elementType: 'input',\n          elementConfig: {\n          type: 'text',\n          name: 'title',\n          placeholder: 'Title'\n          },\n          value: ''\n        },\n          link: {\n          elementType: 'input',\n          elementConfig: {\n          type: 'text',\n          name: 'link',\n          placeholder: 'Link'\n          },\n          value: ''\n        },\n          description: {\n          elementType: 'input',\n          elementConfig: {\n          type: 'text',\n          name: 'description',\n          placeholder: 'Description'\n          },\n          value: ''\n        },\n      },\n      education: {\n          college: {\n          elementType: 'input',\n          elementConfig: {\n          type: 'text',\n          name: 'college',\n          placeholder: 'College'\n          },\n          value: ''\n        },\n                year: {\n          elementType: 'input',\n          elementConfig: {\n          type: 'text',\n          name: 'year',\n          placeholder: 'Year'\n          },\n          value: ''\n        },\n          qualification: {\n          elementType: 'input',\n          elementConfig: {\n          type: 'text',\n          name: 'qualification',\n          placeholder: 'Qualification'\n          },\n          value: ''\n        },\n          description: {\n          elementType: 'input',\n          elementConfig: {\n          type: 'text',\n          name: 'description',\n          placeholder: 'Description'\n          },\n          value: ''\n        },\n      },\n      misc: {\n          hobbies: {\n          elementType: 'input',\n          elementConfig: {\n          type: 'text',\n          name: 'hobbies',\n          placeholder: 'Hobbies'\n          },\n          value: ''\n        },\n          achievements: {\n          elementType: 'input',\n          elementConfig: {\n          type: 'text',\n          name: 'achievements',\n          placeholder: 'Achievements'\n          },\n          value: ''\n        },\n      }\n    },\n  }\n\n  componentDidMount() {\n    //this.refEl.focus();\n  }\n\n  formSubmitHandler = (event) => {\n    event.preventDefault();\n    this.setState({page: this.state.page+1});\n  }\n\n  inputChangedHandler = (event, inputIdentifier) => {\n    const updatedForm = {\n      ...this.state.formElements\n    };\n\n    const identifierElement = {\n      ...updatedForm[inputIdentifier]\n    };\n\n    const updatedFormElement = {\n      ...identifierElement[event.target.name]\n    };\n    updatedFormElement.value = event.target.value;\n    updatedForm[inputIdentifier][event.target.name] = updatedFormElement;\n    this.setState({formElements: updatedForm});\n  }\n\n  nextPageHandler = (event) => {\n    const page = this.state.page;\n    this.setState({page: page + 1});\n  }\n\n  previousPageHandler = (event) => {\n    const page = this.state.page;\n    this.setState({page: page - 1});\n  }\n\n  addInputElement = (event) => {\n    event.preventDefault();\n    alert(\"h\")\n  }\n\n  render () {\n\n    const page = this.state.page;\n    let wizardForm = null;\n\n    switch(page) {\n      case 1: return(\n        wizardForm = <PersonalDetails\n          formElements={this.state.formElements.personal}\n          inputChanged={(event) => this.inputChangedHandler(event, 'personal')}\n          formSubmit={this.formSubmitHandler}\n        />\n      );\n        break;\n      case 2: (\n        wizardForm = <Experience\n          formElements={this.state.formElements.experience}\n          inputChanged={(event) => this.inputChangedHandler(event, 'experience')}\n          formSubmit={this.formSubmitHandler}\n          prevPage={this.previousPageHandler}\n          nextPage={this.nextPageHandler}\n          addEl={this.addInputElement}\n        />\n      );\n        break;\n      case 3: (\n        wizardForm = <Projects\n          formElements={this.state.formElements.projects}\n          inputChanged={(event) => this.inputChangedHandler(event, 'projects')}\n          formSubmit={this.formSubmitHandler}\n          prevPage={this.previousPageHandler}\n          nextPage={this.nextPageHandler}\n        />\n      );\n        break;\n        case 4: (\n        wizardForm = <Projects\n          formElements={this.state.formElements.education}\n          inputChanged={(event) => this.inputChangedHandler(event, 'education')}\n          formSubmit={this.formSubmitHandler}\n          prevPage={this.previousPageHandler}\n          nextPage={this.nextPageHandler}\n        />\n      );\n        break;\n        case 5: (\n        wizardForm = <Misc\n          formElements={this.state.formElements.misc}\n          inputChanged={(event) => this.inputChangedHandler(event, 'misc')}\n          formSubmit={this.formSubmitHandler}\n          prevPage={this.previousPageHandler}\n          nextPage={this.nextPageHandler}\n        />\n      );\n        break;\n      case 6: (\n        wizardForm = <Success/>\n      )\n\n    }\n\n    return(\n      <Aux>\n      {wizardForm }\n      </Aux>\n    );\n  }\n};\n\nexport default BuildControls;\n","import React, { Component } from 'react';\nimport BuildControls from '../../components/BuildControls/BuildControls';\nimport Aux from '../../hoc/Aux';\n\nclass ResumeBuilder extends Component {\n\n  render () {\n    return (\n      <Aux>\n        <div className=\"resume-builder col-lg-8 text-center mx-auto mt-5\">\n          <h1><b>Resume Builder</b></h1>\n          <p>First React App</p>\n          <hr/>\n        </div>\n\n        <div className=\"build-controls pt-5 mt-5\">\n          <BuildControls />\n        </div>\n      </Aux>\n    );\n  }\n}\n\nexport default ResumeBuilder;\n","import React from 'react';\nimport './App.css';\nimport Aux from './hoc/Aux';\nimport ResumeBuilder from './containers/ResumeBuilder/ResumeBuilder';\n\nfunction App() {\n  return (\n    <Aux>\n      <main>\n        <ResumeBuilder></ResumeBuilder>\n      </main>\n    </Aux>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}