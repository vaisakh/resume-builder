{"version":3,"sources":["reducers/personalInfoReducer.js","actions/types.js","reducers/workInfoReducer.js","reducers/educationInfoReducer.js","reducers/projectInfoReducer.js","reducers/miscInfoReducer.js","reducers/index.js","store/store.js","hoc/Aux.js","components/BuildControls/PersonalDetails/PersonalDetailsForm.js","components/BuildControls/Experience/ExperienceForm.js","components/BuildControls/Education/EducationForm.js","components/BuildControls/Projects/ProjectsForm.js","components/BuildControls/Misc/MiscForm.js","components/BuildControls/Success/Success.js","components/BuildControls/BuildControls.js","actions/personalInfoActions.js","actions/workInfoActions.js","actions/educationInfoActions.js","actions/projectInfoActions.js","actions/miscInfoActions.js","containers/ResumeBuilder/ResumeBuilder.js","App.js","serviceWorker.js","index.js"],"names":["initialState","person","name","email","phone","address","skills","personalInfoReducer","state","arguments","length","undefined","action","type","Object","objectSpread","payload","exp","workInfoReducer","education","educationInfoReducer","projects","projectInfoReducer","misc","miscInfoReducer","rootReducer","combineReducers","personalInfo","workInfo","educationInfo","projectInfo","miscInfo","form","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","aux","props","children","PersonalDetailsForm","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","focusTextInput","inputChangedHandler","event","setState","defineProperty","target","value","onSubmitHandler","values","onSubmit","formIdentifier","renderInput","_ref","input","meta","custom","objectWithoutProperties","react_default","a","createElement","className","wrapperclassname","label","assign","error","touched","renderTextArea","_ref2","constructor","textInput","React","createRef","handleSubmit","Field","placeholder","component","id","cols","rows","Component","reduxForm","validate","errors","destroyOnUnmount","ExperienceForm","renderExperience","_ref3","fields","_ref3$meta","submitFailed","Aux","map","index","key","onClick","remove","concat","push","_this$props","submitting","pristine","reset","FieldArray","previousPage","disabled","expArrayErrors","forEach","experience","expIndex","expErrors","organization","designation","duration","description","_error","EducationForm","college","year","qualification","ProjectsForm","title","link","MiscForm","hobbies","achievements","success","BuildControls","page","nextPageHandler","previousPageHandler","formElements","newPerson","newEducation","newWork","newProject","newMisc","console","log","_this2","wizardForm","PersonalDetails_PersonalDetailsForm","Experience_ExperienceForm","Education_EducationForm","Projects_ProjectsForm","Misc_MiscForm","Success","connect","dispatch","ResumeBuilder","components_BuildControls_BuildControls","App","es","containers_ResumeBuilder_ResumeBuilder","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a5bc9238.chunk.js","sourcesContent":["import { NEW_PERSONAL_INFO } from '../actions/types';\n\nconst initialState = {\n  person: {\n    name: '',\n    email: '',\n    phone: '',\n    address: '',\n    skills: ''\n  }\n}\n\nconst personalInfoReducer = (state = initialState, action) => {\n  switch ( action.type ) {\n    case NEW_PERSONAL_INFO:\n      return {\n        ...state,\n        person: action.payload\n      }\n    default:\n      return state;\n  }\n}\n\n\nexport default personalInfoReducer;\n","export const NEW_PERSONAL_INFO = 'NEW_PERSONAL_INFO';\nexport const NEW_WORK_INFO = 'NEW_WORK_INFO';\nexport const NEW_EDUCATION_INFO = 'NEW_EDUCATION_INFO';\nexport const NEW_PROJECT_INFO = 'NEW_PROJECT_INFO';\nexport const NEW_MISC_INFO = 'NEW_MISC_INFO';\n","import { NEW_WORK_INFO } from '../actions/types';\n\nconst initialState = {\n  exp: []\n}\n\n\nconst workInfoReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case NEW_WORK_INFO:\n      return state;\n    default:\n      return state;\n  }\n}\n\nexport default workInfoReducer;\n","import { NEW_EDUCATION_INFO } from '../actions/types';\n\nconst initialState = {\n  education: {}\n}\n\nconst educationInfoReducer = (state = initialState, action) => {\n  switch ( action.type ) {\n    case NEW_EDUCATION_INFO:\n      return {\n        ...state,\n        education: action.payload\n      }\n    default:\n      return state;\n  }\n}\n\nexport default educationInfoReducer;\n","import { NEW_PROJECT_INFO } from '../actions/types';\n\nconst initialState = {\n  projects: {}\n}\n\nconst projectInfoReducer = (state = initialState, action) => {\n  switch( action.type ) {\n    case NEW_PROJECT_INFO:\n      return {\n        ...state,\n        projects: action.payload\n      }\n    default:\n      return state;\n  }\n}\n\nexport default projectInfoReducer;\n","import { NEW_MISC_INFO } from '../actions/types';\n\nconst initialState = {\n  misc: {}\n}\n\nconst miscInfoReducer = (state = initialState, action) => {\n  switch ( action.type ) {\n    case NEW_MISC_INFO:\n      return {\n        ...state,\n        misc: action.payload\n      }\n    default:\n      return state;\n  }\n}\n\nexport default miscInfoReducer;\n","import { combineReducers } from 'redux';\nimport personalInfoReducer from './personalInfoReducer';\nimport workInfoReducer from './workInfoReducer';\nimport educationInfoReducer from './educationInfoReducer';\nimport projectInfoReducer from './projectInfoReducer';\nimport miscInfoReducer from './miscInfoReducer';\nimport { reducer as formReducer  } from 'redux-form';\n\nconst rootReducer = combineReducers({\n  personalInfo: personalInfoReducer,\n  workInfo: workInfoReducer,\n  educationInfo: educationInfoReducer,\n  projectInfo: projectInfoReducer,\n  miscInfo: miscInfoReducer,\n  form: formReducer\n});\n\n\nexport default rootReducer;\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from '../reducers';\nimport thunk from 'redux-thunk';\n\nconst initialState = {\n};\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(rootReducer, initialState, composeEnhancers(\n  applyMiddleware(thunk)\n));\n\nexport default store;\n\n","const aux = (props) => props.children;\n\nexport default aux;\n","import React, { Component } from 'react';\nimport { Field, reduxForm  } from 'redux-form';\n\n\nclass PersonalDetailsForm extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      email: '',\n      phone: '',\n      address: '',\n      skills: ''\n    }\n\n    this.formIdentifier = this.constructor.name;\n    this.textInput = React.createRef();\n  }\n\n  componentDidMount() {\n    //this.focusTextInput();\n  }\n\n  focusTextInput = () => {\n    //this.textInput.current.focus();\n  }\n\n  inputChangedHandler = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  onSubmitHandler = (values) => {\n    this.props.onSubmit(values, this.formIdentifier);\n  }\n\n  renderInput = ({ input, meta, ...custom }) => {\n    return(\n      <div className={custom.wrapperclassname}>\n        <label>{custom.label}*</label>\n        <input\n          {...input}\n          {...custom}\n        />\n            { meta.error && meta.touched && <span className=\"form-text text-muted\">{meta.error}</span> }\n      </div>\n    )\n  }\n\n  renderTextArea = ({ input, meta, ...custom }) => {\n    return(\n      <div className={custom.wrapperclassname}>\n        <label>{custom.label}*</label>\n        <textarea\n          {...input}\n          {...custom}\n        />\n            { meta.error && meta.touched && <span className=\"form-text text-muted\">{meta.error}</span> }\n          </div>\n    )\n  }\n\n  render () {\n    const { handleSubmit } = this.props;\n    return(\n\n      <div className=\"container col-lg-8 mx-auto text-center\">\n        <div className=\"shadow border-0 card animated fadeInLeft\">\n          <div className=\"card-body\">\n            <h3 className=\"card-title\">Personal Info</h3>\n            <hr/>\n          </div>\n          <form onSubmit={ handleSubmit(this.onSubmitHandler) }>\n\n            <div className=\"row col-lg-10 mx-auto\">\n                <Field\n                  className=\"form-control\"\n                  name=\"name\"\n                  type=\"text\"\n                  placeholder=\"Name\"\n                  component={this.renderInput}\n                  label=\"Name\"\n                  wrapperclassname=\"col-lg-4 text-left\"\n                />\n                <Field\n                  className=\"form-control\"\n                  name=\"email\"\n                  type=\"email\"\n                  placeholder=\"Email\"\n                  label=\"Email\"\n                  component={this.renderInput}\n                  wrapperclassname=\"col-lg-4 text-left\"\n                />\n\n                <Field\n                  className=\"form-control\"\n                  name=\"phone\"\n                  type=\"number\"\n                  label=\"Phone\"\n                  placeholder=\"Phone\"\n                  component={this.renderInput}\n                  wrapperclassname=\"col-lg-4 text-left\"\n                />\n            </div>\n            <br />\n\n            <div className=\"row col-lg-10 mx-auto\">\n                <Field\n                  className=\"form-control\"\n                  id=\"address\"\n                  name=\"address\"\n                  cols=\"30\" rows=\"5\"\n                  placeholder=\"Address\"\n                  label=\"Address\"\n                  component={this.renderTextArea}\n                  wrapperclassname=\"col-lg-12 text-left\"\n                />\n          </div>\n\n          <div className=\"row col-lg-10 mx-auto\">\n            <Field\n              className=\"form-control\"\n              name=\"skills\"\n              type=\"text\"\n              label=\"Skills\"\n              placeholder=\"Skills\"\n              component={this.renderInput}\n              wrapperclassname=\"col-lg-12 text-left\"\n            />\n            </div>\n            <br />\n\n          <div className=\"container text-center\">\n            <button type=\"submit\" className=\"btn-info\" >Next</button>\n          </div>\n      <br />\n        </form>\n\n      </div>\n\n      <br />\n      <br />\n    </div>\n    );\n  }\n}\n\nconst validate = values => {\n  const errors = {};\n\n  if(!values.name) {\n    errors.name = 'required';\n  }\n\n  if(!values.email) {\n    errors.email = 'required';\n  }\n\n  if(!values.phone) {\n    errors.phone = 'required';\n  }\n\n  if(!values.address) {\n    errors.address = 'required';\n  }\n\n  if(!values.skills) {\n    errors.skills = 'required';\n  }\n\n  return errors;\n}\n\nPersonalDetailsForm = reduxForm({\n  form: 'personal',\n  validate,\n  destroyOnUnmount: false\n})(PersonalDetailsForm)\n\nexport default PersonalDetailsForm;\n","import React, { Component } from 'react';\nimport { Field, FieldArray, reduxForm  } from 'redux-form';\nimport Aux from '../../../hoc/Aux';\n//import { getFormValues  } from \"redux-form\";\n\n\nclass ExperienceForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    }\n\n    this.formIdentifier = this.constructor.name;\n    this.textInput = React.createRef();\n  }\n\n  componentDidMount() {\n    //this.focusTextInput();\n  }\n\n  focusTextInput = () => {\n    //this.textInput.current.focus();\n  }\n\n  inputChangedHandler = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n  }\n\n  onSubmitHandler = (values) => {\n    this.props.onSubmit(values.exp, this.formIdentifier);\n  }\n\n  renderInput = ({ input, meta, ...custom }) => {\n    return(\n      <div className={custom.wrapperclassname}>\n        <label>{custom.label}*</label>\n        <input\n          {...input}\n          {...custom}\n        />\n            { meta.error && meta.touched && <span className=\"form-text text-muted\">{meta.error}</span> }\n          </div>\n    )\n  }\n\n  renderTextArea = ({ input, meta, ...custom }) => {\n    return(\n      <div className={custom.wrapperclassname}>\n        <label>{custom.label}*</label>\n        <textarea\n          {...input}\n          {...custom}\n        />\n            { meta.error && meta.touched && <span className=\"form-text text-muted\">{meta.error}</span> }\n          </div>\n    )\n  }\n\n  renderExperience = ({ fields, meta: { error, submitFailed } }) => {\n\n    return(\n      <Aux>\n            {fields.map((exp, index) => (\n              <div key={index}>\n                <div className=\"row col-lg-10 mx-auto\">\n\n                  <div className=\"col-lg-12 text-left\">\n                    <h3 className=\"d-inline-block\">\n                      <b><i className=\"fas fa-check-circle mr-1\"></i>{index + 1}</b>\n                    </h3>\n                    <button\n                      className=\"d-inline-block float-right p-0 m-1 border-0\"\n                      type=\"button\"\n                      onClick={() => fields.remove(index)}>\n                      <i className=\"fas fa-trash\"></i>\n                    </button>\n                  </div>\n\n                  <Field\n                    className=\"form-control\"\n                    name={`${exp}.organization`}\n                    type=\"text\"\n                    placeholder=\"Organization\"\n                    label=\"Organization\"\n                    component={this.renderInput}\n                    wrapperclassname=\"col-lg-4 text-left\"\n                  />\n                    <Field\n                      className=\"form-control\"\n                      name={`${exp}.designation`}\n                      type=\"text\"\n                      placeholder=\"Designation\"\n                      label=\"Designation\"\n                      component={this.renderInput}\n                      wrapperclassname=\"col-lg-4 text-left\"\n                    />\n\n                    <Field\n                      className=\"form-control\"\n                      name={`${exp}.duration`}\n                      type=\"text\"\n                      placeholder=\"Duration\"\n                      label=\"Duration\"\n                      component={this.renderInput}\n                      wrapperclassname=\"col-lg-4 text-left\"\n                    />\n                    </div>\n                    <br/>\n                    <div className=\"row col-lg-10 mx-auto\">\n                      <Field\n                        className=\"form-control\"\n                        name={`${exp}.description`}\n                        type=\"text\"\n                        placeholder=\"Description\"\n                        label=\"Description\"\n                        component={this.renderTextArea}\n                        wrapperclassname=\"col-lg-12 text-left\"\n                      />\n                      </div>\n                      <br/>\n                    </div>\n            ))}\n        <div className=\"container text-center\">\n          <button\n            type=\"button\"\n            onClick={() => fields.push({})}\n            className=\"rounded-circle py-1 px-2\"\n          >\n              <i className=\"fas fa-plus\"></i>\n            </button>\n            <div>\n            {submitFailed && error && <span>{error}</span>}\n            </div>\n          </div>\n\n      </Aux>\n    )\n\n  }\n\n  render () {\n\n    const { handleSubmit, pristine, reset, submitting  } = this.props;\n\n    return (\n      <div className=\"container col-lg-8 mx-auto text-center\">\n        <div className=\"shadow border-0 card animated fadeInLeft\">\n          <div className=\"card-body\">\n            <h3 className=\"card-title\">Work Experience</h3>\n            <hr/>\n          </div>\n          <form onSubmit={ handleSubmit(this.onSubmitHandler) }>\n            <br/>\n            <FieldArray name=\"exp\" component={this.renderExperience} />\n            <br />\n            <div className=\"container text-center\">\n            <button className=\"btn-info\" onClick={this.props.previousPage}>Back</button>\n            <button type=\"submit\" disabled={submitting }className=\"btn-info\">Next</button>\n          </div>\n          <br />\n        </form>\n      </div>\n\n      <br />\n      <br />\n    </div>\n    );\n  }\n}\n\nconst validate = values => {\n  const errors = {};\n  if (!values.exp || !values.exp.length) {\n    errors.exp = { _error: 'At least one exp must be entered'  }\n  }else {\n    const expArrayErrors = [];\n    values.exp.forEach((experience, expIndex) => {\n      const expErrors = {}\n\n      if (!experience || !experience.organization) {\n        expErrors.organization = 'Required'\n        expArrayErrors[expIndex] = expErrors\n      }\n\n      if (!experience || !experience.designation) {\n        expErrors.designation = 'Required'\n        expArrayErrors[expIndex] = expErrors\n      }\n\n      if (!experience || !experience.duration) {\n        expErrors.duration = 'Required'\n        expArrayErrors[expIndex] = expErrors\n      }\n\n      if (!experience || !experience.description) {\n        expErrors.description = 'Required'\n        expArrayErrors[expIndex] = expErrors\n      }\n    });\n\n    if(expArrayErrors.length) {\n      errors.exp= expArrayErrors\n    }\n  }\n\n  return errors;\n}\n\nExperienceForm = reduxForm({\n  form: 'experience',\n  validate,\n  destroyOnUnmount: false\n})(ExperienceForm)\n\nexport default ExperienceForm;\n","import React, { Component } from 'react';\nimport { Field, reduxForm  } from 'redux-form';\n\nclass EducationForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      college: '',\n      year: '',\n      qualification: '',\n      description: ''\n    }\n\n    this.formIdentifier = this.constructor.name;\n    this.textInput = React.createRef();\n  }\n\n  componentDidMount() {\n    //this.focusTextInput();\n  }\n\n  focusTextInput = () => {\n    //this.textInput.current.focus();\n  }\n\n  inputChangedHandler = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n  }\n\n  onSubmitHandler = (values) => {\n    this.props.onSubmit(values, this.formIdentifier);\n  }\n\n  renderInput = ({ input, meta, ...custom }) => {\n    return(\n      <div className={custom.wrapperclassname}>\n        <label>{custom.label}*</label>\n        <input\n          {...input}\n          {...custom}\n        />\n            { meta.error && meta.touched && <span className=\"form-text text-muted\">{meta.error}</span> }\n          </div>\n    )\n  }\n\n  renderTextArea = ({ input, meta, ...custom }) => {\n    return(\n      <div className={custom.wrapperclassname}>\n        <label>{custom.label}*</label>\n        <textarea\n          {...input}\n          {...custom}\n        />\n            { meta.error && meta.touched && <span className=\"form-text text-muted\">{meta.error}</span> }\n          </div>\n    )\n  }\n\n  render () {\n\n    const { handleSubmit } = this.props;\n\n    return(\n\n      <div className=\"container col-lg-8 mx-auto text-center\">\n        <div className=\"shadow border-0 card animated fadeInLeft\">\n          <div className=\"card-body\">\n            <h3 className=\"card-title\">Education Info</h3>\n            <hr/>\n          </div>\n          <form onSubmit={ handleSubmit( this.onSubmitHandler ) }>\n\n            <div className=\"row col-lg-10 mx-auto\">\n              <Field\n                className=\"form-control\"\n                name=\"college\"\n                type=\"text\"\n                placeholder=\"College\"\n                label=\"College\"\n                component={this.renderInput}\n                wrapperclassname=\"col-lg-4 text-left\"\n              />\n                <Field\n                  className=\"form-control\"\n                  name=\"year\"\n                  type=\"text\"\n                  placeholder=\"Year\"\n                  label=\"Year\"\n                  component={this.renderInput}\n                  wrapperclassname=\"col-lg-4 text-left\"\n                />\n                  <Field\n                    className=\"form-control\"\n                    name=\"qualification\"\n                    type=\"text\"\n                    placeholder=\"Qualification\"\n                    label=\"Qualification\"\n                    component={this.renderInput}\n                    wrapperclassname=\"col-lg-4 text-left\"\n                  />\n            </div>\n            <br />\n\n            <div className=\"row col-lg-10 mx-auto\">\n              <Field\n                className=\"form-control\"\n                name=\"description\"\n                type=\"text\"\n                placeholder=\"Description\"\n                label=\"Description\"\n                component={this.renderTextArea}\n                wrapperclassname=\"col-lg-12 text-left\"\n              />\n            </div>\n            <br />\n\n            <div className=\"container text-center\">\n              <button className=\"btn-info\" onClick={this.props.previousPage}>Back</button>\n              <button type=\"submit\" className=\"btn-info\">Next</button>\n            </div>\n            <br />\n          </form>\n        </div>\n\n        <br />\n        <br />\n      </div>\n\n    );\n  }\n}\n\nconst validate = values => {\n  const errors = {};\n\n  if(!values.college) {\n    errors.college = 'required';\n  }\n\n  if(!values.year) {\n    errors.year = 'required';\n  }\n\n  if(!values.qualification) {\n    errors.qualification = 'required;'\n  }\n\n  if(!values.description) {\n    errors.description = 'required';\n  }\n\n  return errors;\n}\n\nEducationForm = reduxForm({\n  form: 'education',\n  validate,\n  destroyOnUnmount: false\n})(EducationForm)\n\nexport default EducationForm;\n","import React, { Component } from 'react';\nimport { Field, reduxForm  } from 'redux-form';\n\n\nclass ProjectsForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: '',\n      link: '',\n      description: ''\n    }\n\n    this.formIdentifier = this.constructor.name;\n    this.textInput = React.createRef();\n  }\n\n  focusTextInput = () => {\n    //this.textInput.current.focus();\n  }\n\n  componentDidMount() {\n    //this.focusTextInput();\n  }\n\n\n\n  inputChangedHandler = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n  }\n\n  onSubmitHandler = (values) => {\n    this.props.onSubmit(values, this.formIdentifier);\n  }\n\n  renderInput = ({ input, meta, ...custom }) => {\n    return(\n      <div className={custom.wrapperclassname}>\n        <label>{custom.label}*</label>\n        <input\n          {...input}\n          {...custom}\n        />\n            { meta.error && meta.touched && <span className=\"form-text text-muted\">{meta.error}</span> }\n          </div>\n    )\n  }\n\n  renderTextArea = ({ input, meta, ...custom }) => {\n    return(\n      <div className={custom.wrapperclassname}>\n        <label>{custom.label}*</label>\n        <textarea\n          {...input}\n          {...custom}\n        />\n            { meta.error && meta.touched && <span className=\"form-text text-muted\">{meta.error}</span> }\n          </div>\n    )\n  }\n\n  render () {\n\n    const { handleSubmit } = this.props;\n\n    return(\n\n      <div className=\"container col-lg-8 mx-auto text-center\">\n        <div className=\"shadow border-0 card animated fadeInLeft\">\n          <div className=\"card-body\">\n            <h3 className=\"card-title\">Projects Info</h3>\n            <hr/>\n          </div>\n          <form onSubmit={ handleSubmit(this.onSubmitHandler) }>\n\n            <div className=\"row col-lg-10 mx-auto\">\n                <Field\n                  className=\"form-control\"\n                  name=\"title\"\n                  type=\"text\"\n                  placeholder=\"Title\"\n                  label=\"Title\"\n                  component={this.renderInput}\n                  wrapperclassname=\"col-lg-6 text-left\"\n                />\n\n                <Field\n                  className=\"form-control\"\n                  name=\"link\"\n                  type=\"text\"\n                  placeholder=\"Link\"\n                  label=\"Link\"\n                  component={this.renderInput}\n                  wrapperclassname=\"col-lg-6 text-left\"\n                />\n            </div>\n            <br />\n            <div className=\"row col-lg-10 mx-auto\">\n                <Field\n                  className=\"form-control\"\n                  name=\"description\"\n                  type=\"text\"\n                  placeholder=\"Description\"\n                  label=\"Description\"\n                  component={this.renderTextArea}\n                  wrapperclassname=\"col-lg-12 text-left\"\n                />\n            </div>\n            <br />\n\n            <div className=\"container text-center\">\n              <button className=\"btn-info\" onClick={this.props.previousPage}>Back</button>\n              <button type=\"submit\" className=\"btn-info\">Next</button>\n            </div>\n            <br />\n          </form>\n        </div>\n\n        <br />\n        <br />\n      </div>\n\n    );\n  }\n}\n\nconst validate = values => {\n  const errors = {};\n\n  if(!values.title) {\n    errors.title = 'required';\n  }\n\n  //if(!values.link) {\n    //errors.link = 'required';\n  //}\n\n  if(!values.description) {\n    errors.description = 'required';\n  }\n\n  return errors;\n}\n\nProjectsForm = reduxForm({\n  form: 'project',\n  validate,\n  destroyOnUnmount: false\n})(ProjectsForm)\n\n\nexport default ProjectsForm;\n","import React, { Component } from 'react';\nimport { Field, reduxForm  } from 'redux-form';\n\n\nclass MiscForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hobbies: '',\n      achievements: ''\n    }\n\n    this.formIdentifier = this.constructor.name;\n    this.textInput = React.createRef();\n  }\n\n  componentDidMount() {\n    this.focusTextInput();\n  }\n\n  focusTextInput = () => {\n    //this.textInput.current.focus();\n  }\n\n  inputChangedHandler = (event,values) => {\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n  }\n\n  onSubmitHandler = (values) => {\n    this.props.onSubmit(values, this.formIdentifier);\n  }\n\n  renderInput = ({input, meta, ...custom})  => {\n    return (\n      <div className=\"col-lg-6 text-left\">\n        <label>{custom.label}*</label>\n        <input\n          {...input}\n          {...custom}\n        />\n            { meta.error && meta.touched && <span className=\"form-text text-muted\">{meta.error}</span> }\n          </div>\n    )\n  }\n\n\n  render () {\n    const { handleSubmit } = this.props;\n    return(\n      <div className=\"container col-lg-8 mx-auto text-center\">\n        <div className=\"shadow border-0 card animated fadeInLeft\">\n          <div className=\"card-body\">\n            <h3 className=\"card-title\">Misc</h3>\n            <hr/>\n          </div>\n          <form onSubmit={handleSubmit(this.onSubmitHandler)}>\n\n            <div className=\"row col-lg-10 mx-auto\">\n                <Field\n                  name=\"hobbies\"\n                  label=\"Hobbies\"\n                  component={this.renderInput}\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Hobbies\"/>\n\n                <Field\n                  className=\"form-control\"\n                  name=\"achievements\"\n                  type=\"text\"\n                  component={this.renderInput}\n                  label=\"Achievements\"\n                  placeholder=\"achievements\"\n                />\n            </div>\n            <br />\n\n            <div className=\"container text-center\">\n              <button className=\"btn-info\" onClick={this.props.previousPage}>Back</button>\n              <button type=\"submit\" className=\"btn-info\">Next</button>\n            </div>\n            <br />\n          </form>\n        </div>\n\n        <br />\n        <br />\n      </div>\n\n    );\n  }\n}\n\nconst validate = values  => {\n  const errors = {};\n\n  if(!values.hobbies) {\n    errors.hobbies = 'required';\n  }\n\n  if(!values.achievements) {\n    errors.achievements = 'required';\n  }\n\n  return errors;\n}\n\nMiscForm = reduxForm({\n  form: 'misc',\n  validate,\n  destroyOnUnmount: false\n})(MiscForm)\n\n\nexport default MiscForm;\n","import React from 'react';\nimport Aux from '../../../hoc/Aux';\n\nconst success = (props) => {\n  return(\n\n\n    <Aux>\n      <div className=\"container col-lg-8 mx-auto text-center\">\n        <div className=\"shadow border-0 card animated fadeInLeftn bounceIn\">\n          <div className=\"card-body text-center pt-5 pb-5\">\n            <i className=\"fas fa-check-circle fa-7x text-success\"></i>\n            <h2>We are building your Resume!</h2>\n            <br/>\n          </div>\n\n        </div>\n      </div>\n      <br/>\n    </Aux>\n\n  );\n}\n\nexport default success;\n","import React, { Component } from 'react';\nimport Aux from '../../hoc/Aux';\n\nimport PersonalDetailsForm from './PersonalDetails/PersonalDetailsForm';\nimport ExperienceForm from './Experience/ExperienceForm';\nimport EducationForm from './Education/EducationForm';\nimport ProjectsForm from './Projects/ProjectsForm';\nimport MiscForm from './Misc/MiscForm';\nimport Success from './Success/Success';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { newPerson } from '../../actions/personalInfoActions';\nimport { newWork } from '../../actions/workInfoActions';\nimport { newEducation } from '../../actions/educationInfoActions';\nimport { newProject } from '../../actions/projectInfoActions';\nimport { newMisc } from '../../actions/miscInfoActions';\n\n\n\nclass BuildControls extends Component {\n  state = {\n    page: 1,\n  }\n\n  componentDidMount() {\n    //this.refEl.focus();\n  }\n  componentWillMount() {\n    console.log( this.props.state)\n  }\n\n  nextPageHandler = (event) => {\n    const page = this.state.page;\n    this.setState({page: page + 1});\n  }\n\n  previousPageHandler = (event) => {\n    const page = this.state.page;\n    this.setState({page: page - 1});\n  }\n\n  onSubmitHandler = (formElements, formIdentifier) => {\n    switch ( formIdentifier ) {\n      case 'PersonalDetailsForm':\n        this.props.newPerson(formElements);\n        break;\n      case 'EducationForm':\n        this.props.newEducation(formElements);\n        break;\n      case 'ExperienceForm':\n        this.props.newWork(formElements);\n        break;\n      case 'ProjectsForm':\n        this.props.newProject(formElements);\n        break;\n      case 'MiscForm':\n        this.props.newMisc(formElements);\n        break;\n      default:\n        break;\n    }\n\n    const page = this.state.page;\n    this.setState({ page: page + 1 });\n  }\n\n  render () {\n\n    const page = this.state.page;\n    let wizardForm = null;\n\n    switch(page) {\n      case 1: (\n        wizardForm = <PersonalDetailsForm\n          onSubmit={(formElements, formIdentifier) => this.onSubmitHandler(formElements, formIdentifier)}\n        />\n      );\n        break;\n      case 2: (\n        wizardForm = <ExperienceForm\n          onSubmit={(formElements, formIdentifier) =>\n              this.onSubmitHandler(formElements, formIdentifier)}\n          previousPage={this.previousPageHandler}\n        />\n      );\n        break;\n      case 3: (\n        wizardForm = <EducationForm\n          onSubmit={(formElements, formIdentifier) =>\n              this.onSubmitHandler(formElements, formIdentifier)}\n          previousPage={this.previousPageHandler}\n          />\n          );\n        break;\n        case 4: (\n          wizardForm = <ProjectsForm\n            onSubmit={(formElements, formIdentifier) =>\n                this.onSubmitHandler(formElements, formIdentifier)}\n          previousPage={this.previousPageHandler}\n          />\n      );\n        break;\n      case 5: (\n        wizardForm = <MiscForm\n          onSubmit={(formElements, formIdentifier) =>\n              this.onSubmitHandler(formElements, formIdentifier)}\n          previousPage={this.previousPageHandler}\n        />\n      );\n        break;\n      case 6: (\n        wizardForm = <Success/>\n      )\n        break;\n        default:\n    }\n\n    return(\n      <Aux>\n          {wizardForm }\n      </Aux>\n    );\n  }\n}\n\n\nBuildControls.propTypes = {\n  newPerson: PropTypes.func.isRequired,\n  newWork: PropTypes.func.isRequired,\n  newEducation: PropTypes.func.isRequired,\n  newProject: PropTypes.func.isRequired,\n  newMisc: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  state: state\n})\n\nexport default connect(mapStateToProps, {newPerson, newWork, newEducation, newProject, newMisc})(BuildControls);\n","import { NEW_PERSONAL_INFO } from './types';\n\nexport const newPerson = (formElements) => {\n  return dispatch => {\n    dispatch({\n      type: NEW_PERSONAL_INFO,\n      payload: formElements\n    })\n  }\n}\n","import { NEW_WORK_INFO } from './types';\n\nexport const newWork = (formElements) => {\n  return dispatch => {\n    dispatch({\n      type: NEW_WORK_INFO,\n      payload: formElements\n    })\n  }\n}\n","import { NEW_EDUCATION_INFO } from './types';\n\n\nexport const newEducation = (formElements) => {\n  return dispatch => {\n    dispatch({\n      type: NEW_EDUCATION_INFO,\n      payload: formElements\n    })\n  }\n}\n\n","import { NEW_PROJECT_INFO } from './types';\n\n\nexport const newProject = (formElements) => {\n  return dispatch => {\n    dispatch({\n      type: NEW_PROJECT_INFO,\n      payload: formElements\n    })\n  }\n}\n","import { NEW_MISC_INFO } from './types';\n\nexport const newMisc = (formElements) => {\n  return dispatch => {\n    dispatch({\n      type: NEW_MISC_INFO,\n      payload: formElements\n    })\n  }\n}\n\n","import React, { Component } from 'react';\nimport BuildControls from '../../components/BuildControls/BuildControls';\nimport Aux from '../../hoc/Aux';\n\nclass ResumeBuilder extends Component {\n\n  render () {\n    return (\n      <Aux>\n        <div className=\"resume-builder col-lg-8 text-center mx-auto mt-5\">\n          <h1><b>Resume Builder</b></h1>\n          <p>First React App</p>\n          <hr/>\n        </div>\n\n        <div className=\"build-controls pt-5 mt-5\">\n          <BuildControls />\n        </div>\n      </Aux>\n    );\n  }\n}\n\nexport default ResumeBuilder;\n","import React from 'react';\nimport './App.css';\nimport { Provider } from 'react-redux';\nimport store from './store/store';\nimport Aux from './hoc/Aux';\nimport ResumeBuilder from './containers/ResumeBuilder/ResumeBuilder';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Aux>\n        <main>\n          <ResumeBuilder></ResumeBuilder>\n        </main>\n      </Aux>\n    </Provider>\n  );\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}