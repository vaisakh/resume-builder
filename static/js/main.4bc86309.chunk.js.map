{"version":3,"sources":["hoc/Aux.js","components/BuildControls/PersonalDetails/PersonalDetails.js","components/BuildControls/Experience/Experience.js","components/BuildControls/Education/Education.js","components/BuildControls/Projects/Projects.js","components/BuildControls/Misc/Misc.js","components/BuildControls/Success/Success.js","components/BuildControls/BuildControls.js","containers/ResumeBuilder/ResumeBuilder.js","App.js","serviceWorker.js","index.js"],"names":["aux","props","children","PersonalDetails","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","inputChangedHandler","event","inputIdentifier","updatedForm","objectSpread","state","formElements","updatedPersonalEl","personal","identifierElement","updatedFormElement","target","name","value","setState","personal1","name1","elementType","elementConfig","type","placeholder","required","email1","phone1","address1","skills1","_this2","formElementsObj","formElementsArray","key","divider","charAt","length","push","id","config","identifier","formElement","elkey","react_default","a","createElement","Aux","className","onSubmit","formSubmit","map","onChange","onClick","prevPage","nextPage","Component","Experience","updatedExperienceElEl","experience","addEl","preventDefault","elKeys","keys","lastKey","lastKeyIndex","parseInt","newEl","organization1","position1","duration1","description1","Education","education","education1","college1","year1","qualification1","Projects","projects","project1","title1","link1","Misc","misc","misc1","hobbies1","achievements1","success","BuildControls","page","formSubmitHandler","console","log","nextPageHandler","previousPageHandler","wizardForm","BuildControls_PersonalDetails_PersonalDetails","BuildControls_Experience_Experience","BuildControls_Education_Education","BuildControls_Projects_Projects","BuildControls_Misc_Misc","Success","ResumeBuilder","components_BuildControls_BuildControls","App","containers_ResumeBuilder_ResumeBuilder","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4bc86309.chunk.js","sourcesContent":["const aux = (props) => props.children;\n\nexport default aux;\n","import React, { Component } from 'react';\nimport Aux from '../../../hoc/Aux';\n//import Input from '../../UserControls/Input/Input';\n\nclass PersonalDetails extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n    formElements: {\n      personal: {\n        personal1: {\n          name1: { elementType: 'input', elementConfig: { type: 'text', name: 'name1', placeholder: 'Your Name', required: 'required' }, value: '' },\n          email1: { elementType: 'input', elementConfig: { type: 'email', name: 'email1', placeholder: 'name@example.com', required: 'required' }, value: '' },\n          phone1: { elementType: 'input', elementConfig: { type: 'text', name: 'phone1', placeholder: 'Your Phone', required: 'required' }, value: '' },\n          address1: { elementType: 'textarea', elementConfig: { type: 'text', name: 'address1', placeholder: 'Your Address', required: 'required' }, value: '' },\n          skills1: { elementType: 'input', elementConfig: { type: 'text', name: 'skills1', placeholder: 'Your Skills' }, value: '' }\n        }\n      }}\n    }\n  }\n\n  inputChangedHandler = (event, inputIdentifier) => {\n    const updatedForm = {\n      ...this.state.formElements\n    };\n\n    const updatedPersonalEl = {\n      ...updatedForm.personal\n    }\n\n    const identifierElement = {\n      ...updatedPersonalEl[inputIdentifier]\n    };\n    const updatedFormElement = {\n      ...identifierElement[event.target.name]\n    };\n\n    updatedFormElement.value = event.target.value;\n    updatedPersonalEl[inputIdentifier][event.target.name] = updatedFormElement;\n    this.setState({formElements: updatedForm});\n  }\n\n\n  render() {\n\n    const formElementsObj = {};\n    const formElementsArray = [];\n    //const formElements = this.props.formElements;\n    const formElements = this.state.formElements.personal;\n\n    for(let key in formElements) {\n      let divider = 'divider' + key.charAt(key.length - 1);\n      formElementsArray.push({id: divider, config: key.charAt(key.length - 1), identifier: ''});\n\n      let formElement = formElements[key];\n      for(let elkey in formElement) {\n        formElementsArray.push({id: elkey, config: formElement[elkey], identifier: key});\n      }\n      formElementsObj[key] = formElementsArray;\n    }\n\n\n    return(\n      <Aux>\n        <div className=\"container col-lg-8 mx-auto text-center\">\n          <div className=\"shadow border-0 card animated fadeInLeft\">\n            <div className=\"card-body\">\n              <h3 className=\"card-title\">Personal Info</h3>\n              <hr/>\n            </div>\n            <form onSubmit={this.props.formSubmit}>\n                {\n                  formElementsArray.map(formElement => (\n                    <Aux key={formElement.id}>\n\n                      <div className=\"row col-lg-10 mx-auto\">\n                          {formElement.id === 'divider'+formElement.config ?\n                              <div className=\"col-lg-12 text-left\">\n                                <h3><b><i className=\"fas fa-check-circle mr-1\"></i>{formElement.config}</b></h3><hr/>\n                                </div>: <div className=\"col-lg-12 text-left\">\n                                <label></label>\n                                <input\n                                  className=\"form-control\"\n                                  key={formElement.id}\n                                  type={formElement.config.elementConfig.elementType}\n                                  name={formElement.id}\n                                  placeholder={formElement.config.elementConfig.placeholder}\n                                  value={formElement.config.value}\n                                  onChange={(event) => this.inputChangedHandler(event, formElement.identifier)}/>\n                              </div>\n                          }\n                            </div>\n                          </Aux>\n                  ))\n                }\n                          <br />\n                          <div className=\"container text-center\">\n                            <button type=\"button\" className=\"btn btn-info\" onClick={this.props.prevPage}><i className=\"fas fa-angle-left mr-1\"></i>Back</button>\n                            <button type=\"submit\" className=\"btn btn-info\" onClick={this.props.nextPage}>Next<i className=\"fas fa-angle-right ml-1\"></i></button>\n                          </div>\n                          <br/>\n                        </form>\n                      </div>\n                    </div>\n                    <br/>\n                  </Aux>\n\n    );\n  }\n}\n\n\nexport default PersonalDetails;\n","import React, { Component } from 'react';\nimport Aux from '../../../hoc/Aux';\n//import Input from '../../UserControls/Input/Input';\n\n\nclass Experience extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      formElements: {\n        experience: {\n          organization1: {\n            organization1: { elementType: 'input', elementConfig: { type: 'text', name: 'organization1', placeholder: 'Organization' }, value: '' },\n            position1: { elementType: 'input', elementConfig: { type: 'text', name: 'position1', placeholder: 'Position' }, value: '' },\n            duration1: { elementType: 'input', elementConfig: { type: 'text', name: 'duration1', placeholder: 'Duration' }, value: '' },\n            description1: { elementType: 'input', elementConfig: { type: 'text', name: 'description1', placeholder: 'Description' }, value: '' }\n          }\n        }\n      }};\n  }\n\n  inputChangedHandler = (event, inputIdentifier) => {\n    const updatedForm = {\n      ...this.state.formElements\n    };\n\n    const updatedExperienceElEl = {\n      ...updatedForm.experience\n    }\n\n    const identifierElement = {\n      ...updatedExperienceElEl[inputIdentifier]\n    };\n\n    const updatedFormElement = {\n      ...identifierElement[event.target.name]\n    };\n\n    updatedFormElement.value = event.target.value;\n    updatedExperienceElEl[inputIdentifier][event.target.name] = updatedFormElement;\n    this.setState({formElements: updatedForm});\n  }\n\n  addEl = (event) => {\n    event.preventDefault();\n    const formElements = {\n      ...this.state.formElements\n    };\n\n    let elKeys = Object.keys(formElements['experience']);\n    let lastKey = elKeys[elKeys.length - 1];\n    let lastKeyIndex = parseInt(lastKey.charAt(lastKey.length - 1)) + 1;\n    let newEl = {};\n\n    newEl['organization'+lastKeyIndex] = { elementType: 'input', elementConfig: { type: 'text', name: 'organization'+lastKeyIndex, placeholder: 'Organization' }, value: ''};\n    newEl['position'+lastKeyIndex] = {  elementType: 'input', elementConfig: { type: 'text', name: 'position1'+lastKeyIndex, placeholder: 'Position' }, value: '' };\n    newEl['duration'+lastKeyIndex] = {  elementType: 'input', elementConfig: { type: 'text', name: 'duration1'+lastKeyIndex, placeholder: 'Duration' }, value: '' };\n    newEl['description'+lastKeyIndex] = {  elementType: 'input', elementConfig: { type: 'text', name: 'description1'+lastKeyIndex, placeholder: 'Description' }, value: '' };\n\n    formElements['experience']['organization'+lastKeyIndex] = newEl;\n    this.setState({formElements: formElements});\n  }\n\n  render() {\n\n\n    const formElementsObj = {};\n    const formElementsArray = [];\n    //const formElements = this.props.formElements;\n    const formElements = this.state.formElements.experience;\n\n    for(let key in formElements) {\n      let divider = 'divider' + key.charAt(key.length - 1);\n      formElementsArray.push({id: divider, config: key.charAt(key.length - 1), identifier: ''});\n\n      let formElement = formElements[key];\n      for(let elkey in formElement) {\n        formElementsArray.push({id: elkey, config: formElement[elkey], identifier: key});\n      }\n      formElementsObj[key] = formElementsArray;\n    }\n\n\n    return(\n      <Aux>\n        <div className=\"container col-lg-8 mx-auto text-center\">\n          <div className=\"shadow border-0 card animated fadeInLeft\">\n            <div className=\"card-body\">\n              <h3 className=\"card-title\">Experience</h3>\n              <hr/>\n            </div>\n            <form onSubmit={this.props.formSubmit}>\n                {\n                  formElementsArray.map(formElement => (\n                    <Aux key={formElement.id}>\n\n                      <div className=\"row col-lg-10 mx-auto\">\n                          {formElement.id === 'divider'+formElement.config ?\n                              <div className=\"col-lg-12 text-left pt-4\">\n                                <h3><b><i className=\"fas fa-check-circle mr-1\"></i>{formElement.config}</b></h3><hr/>\n                                </div>: <div className=\"col-lg-12 text-left\">\n                                <label></label>\n                                <input\n                                  className=\"form-control\"\n                                  key={formElement.id}\n                                  type={formElement.config.elementConfig.elementType}\n                                  name={formElement.id}\n                                  placeholder={formElement.config.elementConfig.placeholder}\n                                  value={formElement.config.value}\n                                  onChange={(event) => this.inputChangedHandler(event, formElement.identifier)}/>\n                              </div>\n                          }\n                            </div>\n                          </Aux>\n                  ))\n                }\n                          <br />\n                          <div className=\"container text-center\">\n                            <button type=\"button\" className=\"btn btn-info\" onClick={this.props.prevPage}><i className=\"fas fa-angle-left mr-1\"></i>Back</button>\n                            <button type=\"submit\" className=\"btn btn-info\" onClick={this.props.nextPage}>Next<i className=\"fas fa-angle-right ml-1\"></i></button>\n                            <button className=\"btn btn-info\" onClick={this.addEl}><i className=\"fas fa-plus ml-1\"></i></button>\n                          </div>\n                          <br/>\n                        </form>\n                      </div>\n                    </div>\n                    <br/>\n                  </Aux>\n\n    );\n  }\n\n}\n\nexport default Experience;\n","import React, { Component } from 'react';\nimport Aux from '../../../hoc/Aux';\n//import Input from '../../UserControls/Input/Input';\n\n\nclass Education extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      formElements: {\n        education: {\n          education1: {\n            college1: { elementType: 'input', elementConfig: { type: 'text', name: 'college1', placeholder: 'College' }, value: '' },\n            year1: { elementType: 'input', elementConfig: { type: 'text', name: 'year1', placeholder: 'Year' }, value: '' },\n            qualification1: { elementType: 'input', elementConfig: { type: 'text', name: 'qualification1', placeholder: 'Qualification' }, value: '' },\n            description1: { elementType: 'input', elementConfig: { type: 'text', name: 'description1', placeholder: 'Description' }, value: '' },\n          }\n        }\n      }};\n  }\n\n  inputChangedHandler = (event, inputIdentifier) => {\n    const updatedForm = {\n      ...this.state.formElements\n    };\n\n    const updatedExperienceElEl = {\n      ...updatedForm.education\n    }\n\n    const identifierElement = {\n      ...updatedExperienceElEl[inputIdentifier]\n    };\n\n    const updatedFormElement = {\n      ...identifierElement[event.target.name]\n    };\n\n    updatedFormElement.value = event.target.value;\n    updatedExperienceElEl[inputIdentifier][event.target.name] = updatedFormElement;\n    this.setState({formElements: updatedForm});\n  }\n\n  addEl = (event) => {\n    event.preventDefault();\n    const formElements = {\n      ...this.state.formElements\n    };\n\n    let elKeys = Object.keys(formElements['education']);\n    let lastKey = elKeys[elKeys.length - 1];\n    let lastKeyIndex = parseInt(lastKey.charAt(lastKey.length - 1)) + 1;\n    let newEl = {};\n\n    newEl['college'+lastKeyIndex] = { elementType: 'input', elementConfig: { type: 'text', name: 'college'+lastKeyIndex, placeholder: 'College' }, value: ''  };\n    newEl['year'+lastKeyIndex] = { elementType: 'input', elementConfig: { type: 'text', name: 'year'+lastKeyIndex, placeholder: 'Year' }, value: '' };\n    newEl['qualification'+lastKeyIndex] = { elementType: 'input', elementConfig: { type: 'text', name: 'qualification'+lastKeyIndex, placeholder: 'Qualification' }, value: '' };\n    newEl['description'+lastKeyIndex] = { elementType: 'input', elementConfig: { type: 'text', name: 'description'+lastKeyIndex, placeholder: 'Description' }, value: '' };\n\n    formElements['education']['education'+lastKeyIndex] = newEl;\n    this.setState({formElements: formElements});\n  }\n\n  render() {\n\n\n    const formElementsObj = {};\n    const formElementsArray = [];\n    //const formElements = this.props.formElements;\n    const formElements = this.state.formElements.education;\n\n    for(let key in formElements) {\n      let divider = 'divider' + key.charAt(key.length - 1);\n      formElementsArray.push({id: divider, config: key.charAt(key.length - 1), identifier: ''});\n\n      let formElement = formElements[key];\n      for(let elkey in formElement) {\n        formElementsArray.push({id: elkey, config: formElement[elkey], identifier: key});\n      }\n      formElementsObj[key] = formElementsArray;\n    }\n\n\n    return(\n      <Aux>\n        <div className=\"container col-lg-8 mx-auto text-center\">\n          <div className=\"shadow border-0 card animated fadeInLeft\">\n            <div className=\"card-body\">\n              <h3 className=\"card-title\">Education</h3>\n              <hr/>\n            </div>\n            <form onSubmit={this.props.formSubmit}>\n                {\n                  formElementsArray.map(formElement => (\n                    <Aux key={formElement.id}>\n\n                      <div className=\"row col-lg-10 mx-auto\">\n                          {formElement.id === 'divider'+formElement.config ?\n                              <div className=\"col-lg-12 text-left pt-4\">\n                                <h3><b><i className=\"fas fa-check-circle mr-1\"></i>{formElement.config}</b></h3><hr/>\n                                </div>: <div className=\"col-lg-12 text-left\">\n                                <label></label>\n                                <input\n                                  className=\"form-control\"\n                                  key={formElement.id}\n                                  type={formElement.config.elementConfig.elementType}\n                                  name={formElement.id}\n                                  placeholder={formElement.config.elementConfig.placeholder}\n                                  value={formElement.config.value}\n                                  onChange={(event) => this.inputChangedHandler(event, formElement.identifier)}/>\n                              </div>\n                          }\n                            </div>\n                          </Aux>\n                  ))\n                }\n                          <br />\n                          <div className=\"container text-center\">\n                            <button type=\"button\" className=\"btn btn-info\" onClick={this.props.prevPage}><i className=\"fas fa-angle-left mr-1\"></i>Back</button>\n                            <button type=\"submit\" className=\"btn btn-info\" onClick={this.props.nextPage}>Next<i className=\"fas fa-angle-right ml-1\"></i></button>\n                            <button className=\"btn btn-info\" onClick={this.addEl}><i className=\"fas fa-plus ml-1\"></i></button>\n                          </div>\n                          <br/>\n                        </form>\n                      </div>\n                    </div>\n                    <br/>\n                  </Aux>\n\n    );\n  }\n\n}\n\nexport default Education;\n","import React, { Component } from 'react';\nimport Aux from '../../../hoc/Aux';\n//import Input from '../../UserControls/Input/Input';\n\n\nclass Projects extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      formElements: {\n        projects: {\n          project1: {\n            title1: { elementType: 'input', elementConfig: { type: 'text', name: 'title1', placeholder: 'Title' }, value: '' },\n            link1: { elementType: 'input', elementConfig: { type: 'text', name: 'link1', placeholder: 'Link' }, value: '' },\n            description1: { elementType: 'input', elementConfig: { type: 'text', name: 'description1', placeholder: 'Description' }, value: '' },\n          }\n        }\n      }};\n  }\n\n  inputChangedHandler = (event, inputIdentifier) => {\n    const updatedForm = {\n      ...this.state.formElements\n    };\n\n    const updatedExperienceElEl = {\n      ...updatedForm.projects\n    }\n\n    const identifierElement = {\n      ...updatedExperienceElEl[inputIdentifier]\n    };\n\n    const updatedFormElement = {\n      ...identifierElement[event.target.name]\n    };\n\n    updatedFormElement.value = event.target.value;\n    updatedExperienceElEl[inputIdentifier][event.target.name] = updatedFormElement;\n    this.setState({formElements: updatedForm});\n  }\n\n  addEl = (event) => {\n    event.preventDefault();\n    const formElements = {\n      ...this.state.formElements\n    };\n\n    let elKeys = Object.keys(formElements['projects']);\n    let lastKey = elKeys[elKeys.length - 1];\n    let lastKeyIndex = parseInt(lastKey.charAt(lastKey.length - 1)) + 1;\n    let newEl = {};\n\n    newEl['title'+lastKeyIndex] = { elementType: 'input', elementConfig: { type: 'text', name: 'title'+lastKeyIndex, placeholder: 'Title' }, value: ''  };\n    newEl['link'+lastKeyIndex] = { elementType: 'input', elementConfig: { type: 'text', name: 'link'+lastKeyIndex, placeholder: 'Link' }, value: '' };\n    newEl['description'+lastKeyIndex] = { elementType: 'input', elementConfig: { type: 'text', name: 'description1'+lastKeyIndex, placeholder: 'Description' }, value: '' };\n\n    formElements['projects']['project'+lastKeyIndex] = newEl;\n    this.setState({formElements: formElements});\n  }\n\n  render() {\n\n\n    const formElementsObj = {};\n    const formElementsArray = [];\n    //const formElements = this.props.formElements;\n    const formElements = this.state.formElements.projects;\n\n    for(let key in formElements) {\n      let divider = 'divider' + key.charAt(key.length - 1);\n      formElementsArray.push({id: divider, config: key.charAt(key.length - 1), identifier: ''});\n\n      let formElement = formElements[key];\n      for(let elkey in formElement) {\n        formElementsArray.push({id: elkey, config: formElement[elkey], identifier: key});\n      }\n      formElementsObj[key] = formElementsArray;\n    }\n\n\n    return(\n      <Aux>\n        <div className=\"container col-lg-8 mx-auto text-center\">\n          <div className=\"shadow border-0 card animated fadeInLeft\">\n            <div className=\"card-body\">\n              <h3 className=\"card-title\">Projects</h3>\n              <hr/>\n            </div>\n            <form onSubmit={this.props.formSubmit}>\n                {\n                  formElementsArray.map(formElement => (\n                    <Aux key={formElement.id}>\n\n                      <div className=\"row col-lg-10 mx-auto\">\n                          {formElement.id === 'divider'+formElement.config ?\n                              <div className=\"col-lg-12 text-left pt-4\">\n                                <h3><b><i className=\"fas fa-check-circle mr-1\"></i>{formElement.config}</b></h3><hr/>\n                                </div>: <div className=\"col-lg-12 text-left\">\n                                <label></label>\n                                <input\n                                  className=\"form-control\"\n                                  key={formElement.id}\n                                  type={formElement.config.elementConfig.elementType}\n                                  name={formElement.id}\n                                  placeholder={formElement.config.elementConfig.placeholder}\n                                  value={formElement.config.value}\n                                  onChange={(event) => this.inputChangedHandler(event, formElement.identifier)}/>\n                              </div>\n                          }\n                            </div>\n                          </Aux>\n                  ))\n                }\n                          <br />\n                          <div className=\"container text-center\">\n                            <button type=\"button\" className=\"btn btn-info\" onClick={this.props.prevPage}><i className=\"fas fa-angle-left mr-1\"></i>Back</button>\n                            <button type=\"submit\" className=\"btn btn-info\" onClick={this.props.nextPage}>Next<i className=\"fas fa-angle-right ml-1\"></i></button>\n                            <button className=\"btn btn-info\" onClick={this.addEl}><i className=\"fas fa-plus ml-1\"></i></button>\n                          </div>\n                          <br/>\n                        </form>\n                      </div>\n                    </div>\n                    <br/>\n                  </Aux>\n\n    );\n  }\n\n}\n\nexport default Projects;\n\n","import React, { Component } from 'react';\nimport Aux from '../../../hoc/Aux';\n//import Input from '../../UserControls/Input/Input';\n\n\nclass Misc extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      formElements: {\n        misc: {\n          misc1: {\n            hobbies1: {elementType: 'input', elementConfig: { type: 'text', name: 'hobbies', placeholder: 'Hobbies' }, value: '' },\n            achievements1: { elementType: 'input', elementConfig: { type: 'text', name: 'achievements', placeholder: 'Achievements' }, value: ''}\n          }\n        }\n      }};\n  }\n\n  inputChangedHandler = (event, inputIdentifier) => {\n    const updatedForm = {\n      ...this.state.formElements\n    };\n\n    const updatedExperienceElEl = {\n      ...updatedForm.misc\n    }\n\n    const identifierElement = {\n      ...updatedExperienceElEl[inputIdentifier]\n    };\n\n    const updatedFormElement = {\n      ...identifierElement[event.target.name]\n    };\n\n    updatedFormElement.value = event.target.value;\n    updatedExperienceElEl[inputIdentifier][event.target.name] = updatedFormElement;\n    this.setState({formElements: updatedForm});\n  }\n\n  addEl = (event) => {\n    event.preventDefault();\n    const formElements = {\n      ...this.state.formElements\n    };\n\n    let elKeys = Object.keys(formElements['misc']);\n    let lastKey = elKeys[elKeys.length - 1];\n    let lastKeyIndex = parseInt(lastKey.charAt(lastKey.length - 1)) + 1;\n    let newEl = {};\n\n    newEl['hobbies'+lastKeyIndex] = { elementType: 'input', elementConfig: { type: 'text', name: 'hobbies'+lastKeyIndex, placeholder: 'Hobbies' }, value: ''  };\n    newEl['achievements'+lastKeyIndex] = { elementType: 'input', elementConfig: { type: 'text', name: 'achievements'+lastKeyIndex, placeholder: 'Achievements' }, value: '' };\n\n    formElements['misc']['misc'+lastKeyIndex] = newEl;\n    this.setState({formElements: formElements});\n  }\n\n  render() {\n\n\n    const formElementsObj = {};\n    const formElementsArray = [];\n    //const formElements = this.props.formElements;\n    const formElements = this.state.formElements.misc;\n\n    for(let key in formElements) {\n      let divider = 'divider' + key.charAt(key.length - 1);\n      formElementsArray.push({id: divider, config: key.charAt(key.length - 1), identifier: ''});\n\n      let formElement = formElements[key];\n      for(let elkey in formElement) {\n        formElementsArray.push({id: elkey, config: formElement[elkey], identifier: key});\n      }\n      formElementsObj[key] = formElementsArray;\n    }\n\n\n    return(\n      <Aux>\n        <div className=\"container col-lg-8 mx-auto text-center\">\n          <div className=\"shadow border-0 card animated fadeInLeft\">\n            <div className=\"card-body\">\n              <h3 className=\"card-title\">Misc</h3>\n              <hr/>\n            </div>\n            <form onSubmit={this.props.formSubmit}>\n                {\n                  formElementsArray.map(formElement => (\n                    <Aux key={formElement.id}>\n\n                      <div className=\"row col-lg-10 mx-auto\">\n                          {formElement.id === 'divider'+formElement.config ?\n                              <div className=\"col-lg-12 text-left pt-4\">\n                                <h3><b><i className=\"fas fa-check-circle mr-1\"></i>{formElement.config}</b></h3><hr/>\n                                </div>: <div className=\"col-lg-12 text-left\">\n                                <label></label>\n                                <input\n                                  className=\"form-control\"\n                                  key={formElement.id}\n                                  type={formElement.config.elementConfig.elementType}\n                                  name={formElement.id}\n                                  placeholder={formElement.config.elementConfig.placeholder}\n                                  value={formElement.config.value}\n                                  onChange={(event) => this.inputChangedHandler(event, formElement.identifier)}/>\n                              </div>\n                          }\n                            </div>\n                          </Aux>\n                  ))\n                }\n                          <br />\n                          <div className=\"container text-center\">\n                            <button type=\"button\" className=\"btn btn-info\" onClick={this.props.prevPage}><i className=\"fas fa-angle-left mr-1\"></i>Back</button>\n                            <button type=\"submit\" className=\"btn btn-info\" onClick={this.props.nextPage}>Next<i className=\"fas fa-angle-right ml-1\"></i></button>\n                            <button className=\"btn btn-info\" onClick={this.addEl}><i className=\"fas fa-plus ml-1\"></i></button>\n                          </div>\n                          <br/>\n                        </form>\n                      </div>\n                    </div>\n                    <br/>\n                  </Aux>\n\n    );\n  }\n\n}\n\nexport default Misc;\n","import React from 'react';\nimport Aux from '../../../hoc/Aux';\n\nconst success = (props) => {\n  return(\n\n\n    <Aux>\n      <div className=\"container col-lg-8 mx-auto text-center\">\n        <div className=\"shadow border-0 card animated fadeInLeftn bounceIn\">\n          <div className=\"card-body text-center pt-5 pb-5\">\n            <i className=\"fas fa-check-circle fa-7x text-success\"></i>\n            <h2>We are building your Resume!</h2>\n            <br/>\n          </div>\n\n        </div>\n      </div>\n      <br/>\n    </Aux>\n\n  );\n}\n\nexport default success;\n","import React, { Component } from 'react';\nimport Aux from '../../hoc/Aux';\n\nimport PersonalDetails from './PersonalDetails/PersonalDetails';\nimport Experience from './Experience/Experience';\nimport Education from './Education/Education';\nimport Projects from './Projects/Projects';\nimport Misc from './Misc/Misc';\nimport Success from './Success/Success';\n\n\nclass BuildControls extends Component {\n  state = {\n    page: 1,\n    formElements: {\n    },\n  }\n\n  componentDidMount() {\n    //this.refEl.focus();\n  }\n\n  formSubmitHandler = (event) => {\n    event.preventDefault();\n    this.setState({page: this.state.page+1});\n  }\n\n  inputChangedHandler = (event, inputIdentifier) => {\n    const updatedForm = {\n      ...this.state.formElements\n    };\n\n    const identifierElement = {\n      ...updatedForm[inputIdentifier][inputIdentifier]\n    };\n    console.log(updatedForm[inputIdentifier][inputIdentifier]);\n\n    const updatedFormElement = {\n      ...identifierElement[event.target.name]\n    };\n\n    updatedFormElement.value = event.target.value;\n    updatedForm[inputIdentifier][inputIdentifier][event.target.name] = updatedFormElement;\n    this.setState({formElements: updatedForm});\n  }\n\n  nextPageHandler = (event) => {\n    const page = this.state.page;\n    this.setState({page: page + 1});\n  }\n\n  previousPageHandler = (event) => {\n    const page = this.state.page;\n    this.setState({page: page - 1});\n  }\n\n\n  render () {\n\n    const page = this.state.page;\n    let wizardForm = null;\n\n    switch(page) {\n      case 1: return(\n        wizardForm = <PersonalDetails\n          formSubmit={this.formSubmitHandler}\n          nextPage={this.nextPageHandler}\n        />\n      );\n        break;\n      case 2: (\n        wizardForm = <Experience\n          formSubmit={this.formSubmitHandler}\n          prevPage={this.previousPageHandler}\n          nextPage={this.nextPageHandler}\n        />\n      );\n        break;\n      case 3: (\n        wizardForm = <Education\n          formSubmit={this.formSubmitHandler}\n          prevPage={this.previousPageHandler}\n          nextPage={this.nextPageHandler}\n        />\n      );\n        break;\n        case 4: (\n        wizardForm = <Projects\n          formSubmit={this.formSubmitHandler}\n          prevPage={this.previousPageHandler}\n          nextPage={this.nextPageHandler}\n        />\n      );\n        break;\n        case 5: (\n        wizardForm = <Misc\n          formSubmit={this.formSubmitHandler}\n          prevPage={this.previousPageHandler}\n          nextPage={this.nextPageHandler}\n        />\n      );\n        break;\n      case 6: (\n        wizardForm = <Success/>\n      )\n        break;\n        default:\n\n    }\n\n    return(\n      <Aux>\n      {wizardForm }\n      </Aux>\n    );\n  }\n};\n\nexport default BuildControls;\n","import React, { Component } from 'react';\nimport BuildControls from '../../components/BuildControls/BuildControls';\nimport Aux from '../../hoc/Aux';\n\nclass ResumeBuilder extends Component {\n\n  render () {\n    return (\n      <Aux>\n        <div className=\"resume-builder col-lg-8 text-center mx-auto mt-5\">\n          <h1><b>Resume Builder</b></h1>\n          <p>First React App</p>\n          <hr/>\n        </div>\n\n        <div className=\"build-controls pt-5 mt-5\">\n          <BuildControls />\n        </div>\n      </Aux>\n    );\n  }\n}\n\nexport default ResumeBuilder;\n","import React from 'react';\nimport './App.css';\nimport Aux from './hoc/Aux';\nimport ResumeBuilder from './containers/ResumeBuilder/ResumeBuilder';\n\nfunction App() {\n  return (\n    <Aux>\n      <main>\n        <ResumeBuilder></ResumeBuilder>\n      </main>\n    </Aux>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}